name: FastAPI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  Semver:
    runs-on: ubuntu-latest
    container: marcelocorreia/semver
    permissions:
      contents: read
    if: github.ref == 'refs/heads/master'
    outputs:
      patched: ${{ steps.bump.outputs.patched }}
    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: version bump
        id: bump
        run: |
          CURRENT=$(git tag -l --sort=-v:refname)
          PATCHED=$(semver -c -i patch $CURRENT)
          echo "patched=$PATCHED" >> "$GITHUB_OUTPUT"

  DockerBuild:
    runs-on: ubuntu-latest
    needs:
      - Semver
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: docker build -f Dockerfile -t ghcr.io/${{ github.repository_owner }}/fastapi:${{ github.sha }} .
        if: github.event_name == 'push'

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'push'

      - name: Push sha
        run: docker push ghcr.io/${{ github.repository_owner }}/fastapi:${{ github.sha }}
        if: github.event_name == 'push'

      - name: Push semver
        env:
          PATCHED: ${{ needs.Semver.outputs.patched }}
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/fastapi:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/fastapi:$PATCHED
          docker push ghcr.io/${{ github.repository_owner }}/fastapi:$PATCHED
        if: ${{ (github.event_name == 'push') && (github.ref == 'refs/heads/master') }}

  HelmRelease:
    runs-on: ubuntu-latest
    needs:
      - Semver
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CR_VERSION: ${{ needs.Semver.outputs.patched }}
          CR_CHARTS_DIR: charts
